# Use a Maven official image as the builder stage
FROM maven:latest as builder

# Set the working directory in the builder stage
WORKDIR /app

# Copy the project's POM file and download dependencies
COPY pom.xml .
RUN mvn dependency:go-offline

# Copy the source code to the builder stage
COPY src ./src

# Build the application without testing because there are errors in tests I was not allowed to change
RUN mvn clean package -DskipTests

#Use a lightweight image as the final stage
FROM bellsoft/liberica-openjdk-alpine:17.0.1

# Install MySQL client tools
RUN apk update
RUN apk add mysql-client

 WORKDIR /app

# Copy only the application artifacts from the builder image
COPY target/accenture-techhub-0.0.1-SNAPSHOT.war ./app.war

# Copy the wait-for-mysql.sh script into the image
COPY wait-for-mysql.sh ./wait-for-mysql.sh

# Make the script executable
RUN chmod +x ./wait-for-mysql.sh

# Expose the service's port
EXPOSE 8080

# Set the entrypoint to the wait-for-mysql.sh script
ENTRYPOINT ["sh", "wait-for-mysql.sh", "java", "-jar", "app.war"]
# ENTRYPOINT ["java", "-jar", "app.war"]